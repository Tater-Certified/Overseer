plugins {
    alias(libs.plugins.shadow)
}

dependencies {
    // Tooling
    compileOnly("dev.neuralnexus:taterapi:${taterlib_version}")
    compileOnly('dev.neuralnexus:conditional-mixins:0.1.1')
    compileOnly('dev.neuralnexus:entrypoint-spoof:0.1.11')

    // Configurate
    compileOnly('org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT')
    compileOnly('io.leangen.geantyref:geantyref:1.3.15')

    // Brigadier
    compileOnly('com.mojang:brigadier:1.0.18')

    // Mixin
    compileOnly('org.spongepowered:mixin:0.8.5')
    compileOnly('org.ow2.asm:asm-tree:6.2')

    // Google Commons
    compileOnly('com.google.guava:guava:33.3.0-jre')
}

tasks.withType(ProcessResources).configureEach {
    filesMatching([
            'plugin.yml',
            'bungee.yml',
            'fabric.mod.json',
            'META-INF/mods.toml', 'mcmod.info', 'pack.mcmeta',
            'META-INF/sponge_plugins.json',
            'velocity-plugin.json'
    ]) {
        expand project.properties
    }
}

java.disableAutoTargetJvm()

shadowJar {
    dependencies {
        exclude('META-INF/maven/')
        exclude('META-INF/services/')
        exclude('META-INF/versions/')
        exclude('bungee.yml')
        exclude('mcmod.info')
        exclude('pack.mcmeta')
        exclude('velocity-plugin.json')
    }

    // TaterLib bundled dependencies
    relocate('org.spongepowered.configurate', 'dev.neuralnexus.taterlib.lib.configurate')
    relocate('com.typesafe.config', 'dev.neuralnexus.taterlib.lib.typesafe.config')
    relocate('io.leangen.geantyref', 'dev.neuralnexus.taterlib.lib.geantyref')

    minimize() {
        exclude(dependency(':common'))
    }

    archiveFileName = "${project_id}-common-full-${version}.jar"
}

artifacts {
    archives(shadowJar)
}
